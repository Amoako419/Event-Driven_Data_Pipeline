version: "3.8" # Ensure your Docker Compose version supports conditions

services:
  data_cleaning:
    build: .
    container_name: data_cleaning
    # This command runs, and upon successful completion (exit code 0),
    # the container will stop.
    command: ["python3", "task1.py"]
    volumes:
      # Mount for raw input data if task1 reads from here
      # Make sure task1.py reads from /app/data/... if using this
      - ./data:/app/data
      # Mount a shared directory for task1 to WRITE its cleaned output
      # Ensure task1.py is configured to write parquet files here (e.g., /app/cleaned_data/clean_orders.parquet)
      - ./cleaned_data:/app/cleaned_data

  kpi_computation:
    build: . # Assumes the same Dockerfile works for both tasks
    container_name: kpi_computation
    # This command will only run after data_cleaning completes successfully
    command: ["python3", "task2.py"]
    volumes:
      # Mount the SAME shared directory for task2 to READ the cleaned input
      # Ensure task2.py is configured to read files from here (e.g., /app/cleaned_data/clean_orders.parquet)
      - ./cleaned_data:/app/cleaned_data
      # Optional: Mount a directory for task2 to WRITE its KPI results
      # Ensure task2.py writes KPIs here (e.g., /app/kpi_output/category_kpis.parquet)
      - ./kpi_results:/app/kpi_results
    depends_on:
      data_cleaning:
        # This is the key: waits for the 'data_cleaning' service's
        # container to stop with a successful exit code (0).
        condition: service_completed_successfully

# Optional: Define local directories if they don't exist
# You might need to create ./data, ./cleaned_data, ./kpi_results locally first.